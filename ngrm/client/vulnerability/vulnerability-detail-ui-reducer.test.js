import * as types from './vulnerability-action-types'
import * as actions from '../actions/api'
import reducer from './vulnerability-detail-ui-reducer'

describe('Vulnerability Detail UI Reducer', () => {
  beforeEach(() => { })

  it('should handle VULN_GET_SUCCESS', () => {
    const action = {
      type: types.VULN_GET_SUCCESS
    }
    const initState = {
    }
    const expectedState = {
      ValidationErrors: {}
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_POST_FAILED:', () => {
    const action = {
      type: types.VULN_POST_FAILED,
      validationErrors: "data"
    }
    const initState = {
      ValidationErrors: {}
    }
    const expectedState = {
      ValidationErrors: "data"
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_REMEDIATION_DATE_CLICK', () => {
    const action = {
      type: types.VULN_REMEDIATION_DATE_CLICK
    }
    const initState = {
      showRemediatedDatePicker: false
    }
    const expectedState = {
      showRemediatedDatePicker: true
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_SELECT_MITIGATION_DATE', () => {
    const action = {
      type: types.VULN_SELECT_MITIGATION_DATE
    }
    const initState = {
      showRemediatedDatePicker: true
    }
    const expectedState = {
      showRemediatedDatePicker: false
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_REMEDIATION_DATE_CLOSE', () => {
    const action = {
      type: types.VULN_REMEDIATION_DATE_CLOSE
    }
    const initState = {
      showRemediatedDatePicker: true
    }
    const expectedState = {
      showRemediatedDatePicker: false
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_CLICK_TARGET_REMEDIATION_DATE', () => {
    const action = {
      type: types.VULN_CLICK_TARGET_REMEDIATION_DATE
    }
    const initState = {
      showTargetRemediationDatepicker: false
    }
    const expectedState = {
      showTargetRemediationDatepicker: true
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_SELECT_TARGET_REMEDIATION_DATE', () => {
    const action = {
      type: types.VULN_SELECT_TARGET_REMEDIATION_DATE
    }
    const initState = {
      showTargetRemediationDatepicker: true
    }
    const expectedState = {
      showTargetRemediationDatepicker: false
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })

  it('should handle VULN_CANCEL_TARGET_REMEDIATION_DATE', () => {
    const action = {
      type: types.VULN_CANCEL_TARGET_REMEDIATION_DATE
    }
    const initState = {
      showTargetRemediationDatepicker: true
    }
    const expectedState = {
      showTargetRemediationDatepicker: false
    }
    expect(reducer(initState, action)).toEqual(expectedState)
  })
})